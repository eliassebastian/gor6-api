
type Level {
    value: String
    lastmodified: Time
}

type TimePlayed {
    value: String
    lastmodified: Time
}

# Player Type (MAIN)
type Player {
    _id: String!
    nickname: String!
    platform: String!
    platformid: String!
    aliases: [Alias]!
    weapons: WeaponsGameModes!
    timeplayed: TimePlayed!
    summary: SummaryGameModes!
    ranked: [RankedSeason!]
    operators: OperatorGameModes!
    maps: MapsGameModes!
    level: Level!
    lastupdate: Time!
}

# Player Search Results
type PlayerSearchResults {
    _id: String!
    nickname: String!
    platform: String!
    platformid: String!
    aliases: [Alias]!
    timeplayed: TimePlayed!
    ranked: [RankedSeason!]!
    level: Level!
    lastupdate: Time!
}

input PlayerSearch {
    name: String!
    platform: String!
}

type Query {
    playerquery(input: PlayerSearch!): Player
    searchquery(input: PlayerSearch!): [PlayerSearchResults!]
    testquery(input: PlayerSearch!): Player
}

scalar Time